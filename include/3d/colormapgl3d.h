/*(C) Copyright 2017 mpperez
Author: mpperez
This library is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the
Free Software Foundation; either version 2.1 of the License, or (at your
option) any later version. (See <http://www.gnu.org/copyleft/lesser.html>.)

This library is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
more details.

You should have received a copy of the GNU Lesser General Public License
along with this library;*/
/*! \file
  \brief Color dataset information.
	\date 05-2010
	\author Marcos Perez*/

/// @ingroup graph3d

#ifndef COLORMAPGL3D
#define COLORMAPGL3D

/** \struct strColorTable3D
    \brief Struct color list.*/
typedef struct strColorTable3D
{
  float color[3];						//!< RGB color format.
}strColorTable3D;


/** \class CColorMapGL3D 
\brief Class that distributes color to dataset, from a minimun and maximun  values interpolates r g and b componets.*/
class CColorMapGL3D  
{
// Construction
public:
	CColorMapGL3D(const char* rutamap); //!< Constructor.
	~CColorMapGL3D();//!< Destructor.
public:
  /** \brief Read colormap data file generated by matlab.
      \param filename Path complete.
      \return Number of colors read.*/
	int ReadColorTable(const char *filename);
  /** \brief Function that generates a colormap.
      \param i_ncolors Number of colors to be generated.*/
	void DefaultColorTable(int i_ncolors=256);
  /** \brief Calculates component r, g o b from a value.
      \param value Value to asing color.
      \param rgb Indicates component to return 0 for red 1 for green 2 for blue.
      \param min  Minimun value of the dataset.
      \param max  Maximun value of the dataset.
      \return Asigned color from 0 to 1.*/
	float ValuesToColors(float value,int rgb,float min,float max);
  /** \brief Calculates component r, g o b for a lis of values.
      \param values Values pointer.
      \param nvalues Number of values.
      \param colors  Pointer of color values.
      \param min  Min value of the dataset.
      \param max  Max value of the dataset.*/
	void ValuesToColors(const double *values,const int nvalues,struct strColorTable3D* colors,double min,double max);
  /** \brief Set minimun and maximun value to asign colors.
      \param i_min Minimun value.
      \param i_max Maximun.*/
	void SetMinMax(float i_min,float i_max);
  void setStartfromzero(bool value);
public:
  int nColors;									//!< Total number of colors.
  struct strColorTable3D* colorTable;	//!< Color table.
  bool startfromzero;						//!< Si True siempre asigna un valor a 0 para tomarlo como referencia.


private:
  float mini;										//!< Min value.
  float	maxi;										//!< Max value.
};
#endif //COLORMAP3D
